---
# 简化的服务器初始化 Playbook
# 运行命令: ansible-playbook -i inventory.yml server-setup.yml

- name: "服务器基础配置"
  hosts: all
  become: yes
  gather_facts: yes
  
  vars:
    # 可修改的变量
    server_timezone: "Asia/Shanghai"
    install_packages:
      - vim
      - curl
      - wget
      - htop
      - git
      - unzip
      - tree
      - screen
      - tmux
  
  tasks:
    # 1. 系统基础配置
    - name: "更新软件包缓存"
      apt:
        update_cache: yes
        cache_valid_time: 86400
      when: ansible_os_family == "Debian"
      tags: ['system']

    - name: "设置时区"
      timezone:
        name: "{{ server_timezone }}"
      tags: ['system']

    - name: "确保时区配置文件正确"
      file:
        src: "/usr/share/zoneinfo/{{ server_timezone }}"
        dest: "/etc/localtime"
        state: link
        force: yes
      tags: ['system']

    - name: "写入时区到/etc/timezone"
      copy:
        content: "{{ server_timezone }}\n"
        dest: /etc/timezone
        mode: '0644'
      tags: ['system']

    - name: "设置主机名到/etc/hostname"
      copy:
        content: "{{ inventory_hostname }}\n"
        dest: /etc/hostname
        mode: '0644'
      tags: ['system']

    - name: "设置运行时主机名"
      hostname:
        name: "{{ inventory_hostname }}"
      tags: ['system']

    - name: "更新/etc/hosts文件"
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.1\.1'
        line: "127.0.1.1\t{{ inventory_hostname }}"
        backup: yes
      tags: ['system']

    - name: "确保localhost条目存在"
      lineinfile:
        path: /etc/hosts
        regexp: '^127\.0\.0\.1'
        line: "127.0.0.1\tlocalhost"
        backup: yes
      tags: ['system']

    # 2. 安装基础软件
    - name: "安装基础工具"
      package:
        name: "{{ install_packages }}"
        state: present
      tags: ['packages']

    - name: "安装Python包"
      package:
        name:
          - python3
          - python3-pip
        state: present
      tags: ['packages']

    # 3. 系统优化配置
    - name: "配置系统limits"
      copy:
        dest: /etc/security/limits.d/99-custom.conf
        content: |
          * soft nofile 65536
          * hard nofile 65536
          * soft nproc 32768
          * hard nproc 32768
        backup: yes
      tags: ['optimize']

    - name: "配置基础网络参数"
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        reload: yes
      loop:
        - { name: 'net.core.somaxconn', value: '65535' }
        - { name: 'net.ipv4.tcp_fin_timeout', value: '10' }
        - { name: 'net.ipv4.tcp_keepalive_time', value: '1200' }
      ignore_errors: yes
      tags: ['optimize']

    # 4. 安全配置
    - name: "配置SSH安全"
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
      loop:
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^#?PubkeyAuthentication', line: 'PubkeyAuthentication yes' }
        - { regexp: '^#?MaxAuthTries', line: 'MaxAuthTries 3' }
      notify: restart ssh
      tags: ['security']

    # 5. 创建有用的别名
    - name: "创建系统别名"
      copy:
        dest: /etc/profile.d/aliases.sh
        content: |
          alias ll='ls -alF'
          alias la='ls -A'
          alias l='ls -CF'
          alias ..='cd ..'
          alias df='df -h'
          alias free='free -h'
          alias top='htop'
        mode: '0644'
      tags: ['config']

    # 6. 验证配置
    - name: "验证时区设置"
      command: timedatectl show --property=Timezone --value
      register: current_timezone
      changed_when: false
      tags: ['system', 'verify']

    - name: "验证主机名设置"
      command: hostname
      register: current_hostname
      changed_when: false
      tags: ['system', 'verify']

    # 7. 显示完成信息
    - name: "显示配置完成信息"
      debug:
        msg: |
          ✅ 服务器配置完成！
          📍 主机: {{ inventory_hostname }} (当前: {{ current_hostname.stdout }})
          🖥️  系统: {{ ansible_distribution }} {{ ansible_distribution_version }}
          🔧 已安装工具: {{ install_packages | join(', ') }}
          🕐 时区: {{ server_timezone }} (当前: {{ current_timezone.stdout }})
          
          ⚠️  注意：主机名和时区的完全生效可能需要重启系统
      tags: ['info']

  handlers:
    - name: restart ssh
      service:
        name: ssh
        state: restarted 